
-----------------------------------------------------------------------------------------------------------------------------
<html>
    <head>
        <title>
            Prime numbers in an array
        </title>
    </head>
    <body>
        <script>
                var numbers = [2, 3, 4, 9, 10, 11, 12, 13, 14, 15];
                var primes = [];

                // prime numbers in an array using anonymous function
                let anonFunction=function() {
                    console.log("----------------------Anonymous Function-------------------");
                    for (var i = 0; i < numbers.length; i++) {
                        var number = numbers[i];
                        var isPrime = true;

                        for (var j = 2; j <= Math.sqrt(number); j++) {
                        if (number % j === 0) {
                            isPrime = false;
                            break;
                        }
                        }

                        if (isPrime && number > 1) {
                        primes.push(number);
                        }
                    }

                    console.log(primes) //primes;
                    };
                    anonFunction();
                    primes=[];


                    // prime numbers in an array using IIFE function
                    (function() {
                    console.log("----------------------IIFE Function-------------------");
                    for (var i = 0; i < numbers.length; i++) {
                        var number = numbers[i];
                        var isPrime = true;

                        for (var j = 2; j <= Math.sqrt(number); j++) {
                        if (number % j === 0) {
                            isPrime = false;
                            break;
                        }
                        }

                        if (isPrime && number > 1) {
                        primes.push(number);
                        }
                    }
                    console.log(primes) //primes;
                    }
                )();


        </script>
    </body>
</html>

-----------------------------------------------------------------------------------------------------------------------------
  <=======================task of day 6: circle uml diagram to class:=====================
var Circle = /** @class */ (function () {
    function Circle(radius, color) {
        this.radius = 1.0;
        this.color = "Red";
        if (typeof (radius) !== "undefined") {
            this.radius = radius;
        }
        if (typeof (color) !== "undefined") {
            this.color = color;
        }
    }
    Circle.prototype.getRadius = function () {
        return this.radius;
    };
    Circle.prototype.setRadius = function (radius) {
        this.radius = radius;
    };
    Circle.prototype.getColor = function () {
        return this.color;
    };
    Circle.prototype.setColor = function (color) {
        this.color = color;
    };
    Circle.prototype.toString = function () {
        return "Radius: " + this.radius + " Color: " + this.color;
    };
    Circle.prototype.getArea = function () {
        return (2 * (Math.PI) * this.radius);
    };
    Circle.prototype.getCircumference = function () {
        return (2 * this.radius);
    };
    return Circle;
}());
var c1 = new Circle();
console.log("Constructor with no params: " + c1.toString(),"\n");
var c2 = new Circle(3.5);
console.log("Constructor with one param: " + c2.toString(),"\n");
var c3 = new Circle(2.2, 'Yellow');
console.log("getRadius: " + c3.getRadius(),"\n");
c3.setRadius(3.3);
console.log("Radius value after setRadius: " + c3.getRadius(),"\n");
console.log("getColor: " + c3.getColor(),"\n");
c3.setColor("Blue");
console.log("Color Value after setColor: " + c3.getColor(),"\n");
console.log(c3.toString(),"\n");
console.log("Area: " + c3.getArea(),"\n");
console.log("Circumference: " + c3.getCircumference(),"\n");

